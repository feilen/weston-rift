Weston-Rift

Rift support as a 'postcompositor', it takes the display set up by a
backend, swaps the framebuffer target to render into a texture, and
renders that texture as a virtual display inside the rift. 3D SBS
content support is in in a hacky form, pass --rift-sbs to enable.
To rotate the output for the rift (if you aren't rotating the display
in some other way), pass --rift-rotate.

I'm still looking for a proper place to put the render_rift call, at
the moment it's in the gl_renderer_repaint_output, which is only called
when there is damage to the output display (moving the mouse works, or
playing a movie)

How to play 3D movies (with weston-rift and mpv):
* Run Weston with `weston -R --rift-sbs (--rift-rotate)` (maybe add 
  --fullscreen?)
* If in X, move the Weston window to the rift (for tracking, have the rift
  display on before launching)
* Run, from any terminal, `mpv <SBS video file> --video-aspect 9:16 -fs`
  (video-aspect is only needed if you're using --rift-rotate, I think)
[Bonus] Youtube SBS videos on the rift (with quvi):
* `quvi dump -s 720p --exec "mpv %u --video-aspect 9:16 -fs" <youtube link>`

Weston

Weston is the reference implementation of a Wayland compositor, and a
useful compositor in its own right.  Weston has various backends that
lets it run on Linux kernel modesetting and evdev input as well as
under X11.  Weston ships with a few example clients, from simple
clients that demonstrate certain aspects of the protocol to more
complete clients and a simplistic toolkit.  There is also a quite
capable terminal emulator (weston-terminal) and an toy/example desktop
shell.  Finally, weston also provides integration with the Xorg server
and can pull X clients into the Wayland desktop and act as a X window
manager.

Refer to http://wayland.freedesktop.org/building.html for building
weston and its dependencies.

The test suite can be invoked via `make check`; see
http://wayland.freedesktop.org/testing.html for additional details.
